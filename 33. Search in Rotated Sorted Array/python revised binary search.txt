class Solution(object):
    def search(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: int
        """
        start, end = 0, len(nums) - 1
        while start < end:
            mid = (start + end) >> 1
            if nums[mid] == target: return mid
            
            if nums[start] <= nums[mid]:
                if target < nums[mid] and target >= nums[start]:
                    end = mid - 1
                else:
                    start = mid + 1
            else:
                if target > nums[mid] and target <= nums[end]:
                    start = mid + 1
                else:
                    end = mid - 1
        return start if nums[start] == target else -1

Notice that there is always a half of the array sorted, so we only need to see whether the target is in the sorted part or rotated part