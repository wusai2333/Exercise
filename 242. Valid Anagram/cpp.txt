<<<<<<< HEAD
class Solution {
public:
    bool isAnagram(string s, string t) {
       if(s.length() != t.length()) return false;
       int n = s.length();
       
       unordered_map<char, int> count;
       for (int i = 0; i < n; i++) {
           count[s[i]]++;
           count[t[i]]--;
       }
       for(auto a : count)
            if(a.second) return false;
       return true;
    }
=======
class Solution {
public:
    bool isAnagram(string s, string t) {
       if(s.length() != t.length()) return false;
       int n = s.length();
       
       unordered_map<char, int> count;
       for (int i = 0; i < n; i++) {
           count[s[i]]++;
           count[t[i]]--;
       }
       for(auto a : count)
            if(a.second) return false;
       return true;
    }
>>>>>>> eb4f20642d79ed3df07dab1830859263475bf5e5
};