<<<<<<< HEAD
class MovingAverage {
private:
    queue<int> qu;
    int averageSize;
    double sum; 
public:
    /** Initialize your data structure here. */
    MovingAverage(int size):averageSize(size),sum(0){}

    double next(int val) {
        sum += val;
        qu.push(val);
        int queueSize = (int)qu.size();
        if(queueSize <= averageSize){
            return sum / queueSize;
        }
        else{
            sum -= qu.front();
            qu.pop();
            return sum / averageSize;

        }
    }
};
/**
 * Your MovingAverage object will be instantiated and called as such:
 * MovingAverage obj = new MovingAverage(size);
 * double param_1 = obj.next(val);
=======
class MovingAverage {
private:
    queue<int> qu;
    int averageSize;
    double sum; 
public:
    /** Initialize your data structure here. */
    MovingAverage(int size):averageSize(size),sum(0){}

    double next(int val) {
        sum += val;
        qu.push(val);
        int queueSize = (int)qu.size();
        if(queueSize <= averageSize){
            return sum / queueSize;
        }
        else{
            sum -= qu.front();
            qu.pop();
            return sum / averageSize;

        }
    }
};
/**
 * Your MovingAverage object will be instantiated and called as such:
 * MovingAverage obj = new MovingAverage(size);
 * double param_1 = obj.next(val);
>>>>>>> eb4f20642d79ed3df07dab1830859263475bf5e5
 */