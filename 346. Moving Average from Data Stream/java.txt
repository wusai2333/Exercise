<<<<<<< HEAD
public class MovingAverage {
    Deque<Integer> dq;
    int size;
    double sum;
    /** Initialize your data structure here. */
    public MovingAverage(int size) {
        dq = new LinkedList<>();
        this.size = size;
        this.sum = sum;
    }

    public double next(int val) {
        if(dq.size() < size){
            sum += val;
            dq.addLast(val);
            return sum / dq.size();
        }
        else{
            //int temp = dq.pollFirst();
            sum -= dq.pollFirst();
            dq.addLast(val);
            sum += val;
            return sum / size;
        }
    }
}

/**
 * Your MovingAverage object will be instantiated and called as such:
 * MovingAverage obj = new MovingAverage(size);
 * double param_1 = obj.next(val);
=======
public class MovingAverage {
    Deque<Integer> dq;
    int size;
    double sum;
    /** Initialize your data structure here. */
    public MovingAverage(int size) {
        dq = new LinkedList<>();
        this.size = size;
        this.sum = sum;
    }

    public double next(int val) {
        if(dq.size() < size){
            sum += val;
            dq.addLast(val);
            return sum / dq.size();
        }
        else{
            //int temp = dq.pollFirst();
            sum -= dq.pollFirst();
            dq.addLast(val);
            sum += val;
            return sum / size;
        }
    }
}

/**
 * Your MovingAverage object will be instantiated and called as such:
 * MovingAverage obj = new MovingAverage(size);
 * double param_1 = obj.next(val);
>>>>>>> eb4f20642d79ed3df07dab1830859263475bf5e5
 */