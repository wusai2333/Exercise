<<<<<<< HEAD
class Queue {
public:
    stack<int> input, output;
    // Push element x to the back of queue.
    void push(int x) {
        input.push(x);
    }

    // Removes the element from in front of queue.
    void pop(void) {
        peek();
        output.pop();
    }

    // Get the front element.
    int peek(void) {
        if (output.empty()){
            while(!input.empty())
                output.push(input.top()),input.pop();
        }
        return output.top();
    }

    // Return whether the queue is empty.
    bool empty(void) {
        return input.empty() && output.empty();
    }
=======
class Queue {
public:
    stack<int> input, output;
    // Push element x to the back of queue.
    void push(int x) {
        input.push(x);
    }

    // Removes the element from in front of queue.
    void pop(void) {
        peek();
        output.pop();
    }

    // Get the front element.
    int peek(void) {
        if (output.empty()){
            while(!input.empty())
                output.push(input.top()),input.pop();
        }
        return output.top();
    }

    // Return whether the queue is empty.
    bool empty(void) {
        return input.empty() && output.empty();
    }
>>>>>>> eb4f20642d79ed3df07dab1830859263475bf5e5
};