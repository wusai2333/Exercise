# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def pathSum(self, root, sum):
        """
        :type root: TreeNode
        :type sum: int
        :rtype: int
        """
        return self.helper(root, sum, [sum])
        
    def helper(self, node, origin, targets):
        if not node: return 0
        hit = 0
        for t in targets:
            if t - node.val == 0: hit += 1
        targets = [t - node.val for t in targets] + [origin]
        return hit + self.helper(node.left, origin, targets) + self.helper(node.right, origin, targets)
        
        