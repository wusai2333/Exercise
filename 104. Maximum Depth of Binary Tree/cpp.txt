/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    int maxDepth(TreeNode* root) {
        //DFS
        if(root == NULL)
            return 0;
        int l = maxDepth(root->left);
        int r = maxDepth(root->right);
        return l > r? l+1: r+1;
        //BFS
        /*if(root == NULL)
            return 0;
        queue <TreeNode *> que;
        int nCount = 1;
        int nDepth = 0;
        
        que.push(root);
        while(!que.empty()) {
            TreeNode *pTemp = que.front();
            que.pop();
            nCount--;
            
            if(pTemp->left)
                que.push(pTemp->left);
            if(pTemp->right)
                que.push(pTemp->right);
                
            if(nCount == 0){
                nDepth ++;
                nCount=que.size();
            }
            
        }
        return nDepth;*/
    }
};