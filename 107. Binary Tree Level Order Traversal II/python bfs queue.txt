<<<<<<< HEAD
# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def levelOrderBottom(self, root):
        """
        :type root: TreeNode
        :rtype: List[List[int]]
        """
        queue = collections.deque([(root, 1)])
        res = []
        while queue:
            node, level = queue.popleft()
            if node:
                if len(res) < level:
                    res.insert(0, [])
                res[-level].append(node.val)
                queue.append((node.left, level+1))
                queue.append((node.right, level+1))
=======
# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def levelOrderBottom(self, root):
        """
        :type root: TreeNode
        :rtype: List[List[int]]
        """
        queue = collections.deque([(root, 1)])
        res = []
        while queue:
            node, level = queue.popleft()
            if node:
                if len(res) < level:
                    res.insert(0, [])
                res[-level].append(node.val)
                queue.append((node.left, level+1))
                queue.append((node.right, level+1))
>>>>>>> eb4f20642d79ed3df07dab1830859263475bf5e5
        return res