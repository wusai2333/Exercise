<<<<<<< HEAD
class Solution(object):
    def maximalRectangle(self, matrix):
        """
        :type matrix: List[List[str]]
        :rtype: int
        """
        if not matrix: return 0
        
        rlen = len(matrix)
        clen = len(matrix[0])
        h = [0]*(clen+1)
        maxa = 0
        
        for row in range(rlen):
            stack = []
            for i in range(clen + 1):
                if i < clen:
                    if matrix[row][i] == '1':
                        h[i] += 1
                    else: h[i] = 0
                if not stack or h[stack[-1]] <= h[i]:
                    stack.append(i)
                else:
                    while stack and h[i] < h[stack[-1]]:
                        top = stack.pop()
                        area = h[top] *((i - stack[-1] -1) if stack else i)
                        maxa = max(area, maxa)
                    stack.append(i)
        return maxa
=======
class Solution(object):
    def maximalRectangle(self, matrix):
        """
        :type matrix: List[List[str]]
        :rtype: int
        """
        if not matrix: return 0
        
        rlen = len(matrix)
        clen = len(matrix[0])
        h = [0]*(clen+1)
        maxa = 0
        
        for row in range(rlen):
            stack = []
            for i in range(clen + 1):
                if i < clen:
                    if matrix[row][i] == '1':
                        h[i] += 1
                    else: h[i] = 0
                if not stack or h[stack[-1]] <= h[i]:
                    stack.append(i)
                else:
                    while stack and h[i] < h[stack[-1]]:
                        top = stack.pop()
                        area = h[top] *((i - stack[-1] -1) if stack else i)
                        maxa = max(area, maxa)
                    stack.append(i)
        return maxa
>>>>>>> eb4f20642d79ed3df07dab1830859263475bf5e5
        