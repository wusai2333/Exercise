class Solution(object):
    def maxRotateFunction(self, A):
        """
        :type A: List[int]
        :rtype: int
        """
        allSum, n, F = 0, len(A), 0
        for i in range(n):
            F += i*A[i]
            allSum += A[i]
        maxvalue = F
        for i in range(n-1, 0,-1):
            F = F + allSum - n*A[i]
            maxvalue = max(F, maxvalue)
        return maxvalue
            
Or more pythonic:
class Solution(object):
    def maxRotateFunction(self, A):
        """
        :type A: List[int]
        :rtype: int
        """
        allSum, n, F = 0, len(A), 0
        for i in range(n):
            F += i*A[i]
            allSum += A[i]
        maxvalue = F
        for i in range(1,n):
            F = F + allSum - n*A[-i]
            maxvalue = max(F, maxvalue)
        return maxvalue
            